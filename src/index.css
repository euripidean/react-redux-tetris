/* App */
.App {
  --col-side: calc(var(--tile-size) * 4);
  --col-center: calc(var(--tile-size) * 10);
  --grid-height: calc(var(--tile-size) * 18);

  width: calc(var(--tile-size) * (4 + 1 + 10 + 1 + 4));
  margin: auto;
  display: grid;

  grid-gap: var(--tile-size) var(--tile-size);
  /* Defines three columns of `--col-side`, `--col-center`, and `--col-side` widths. */
  grid-template-columns: var(--col-side) var(--col-center) var(--col-side);
  /* Defines three rows of `100px`, `--grid-height`, and 100px. */
  grid-template-rows: 100px var(--grid-height) 100px;

  /* This defines the areas on the grid with names: 'h', 'l', 'c', 'r',
  and 'b'. The '.' represents an empty cell on the grid. */
  grid-template-areas:
    "h h h"
    "l c r"
    "b b b";

  @media (max-width: 768px) {
    --col-side: calc(var(--tile-size) * 2);
    --col-center: calc(var(--tile-size) * 6);
    --grid-height: calc(var(--tile-size) * 12);
    width: calc(var(--tile-size) * (2 + 1 + 6 + 1 + 2));
    grid-template-columns: var(--col-side) var(--col-center) var(--col-side);
    grid-template-rows: 50px var(--grid-height) 50px;
  }

  /* Styles for phones */
  @media (max-width: 480px) {
    --col-side: calc(var(--tile-size) * 1);
    --col-center: calc(var(--tile-size) * 4);
    --grid-height: calc(var(--tile-size) * 8);
    width: calc(var(--tile-size) * (1 + 1 + 4 + 1 + 1));
    grid-template-columns: var(--col-side) var(--col-center) var(--col-side);
    grid-template-rows: 25px var(--grid-height) 25px;
  }
}

.App-header {
  grid-area: h;
}

.next-block {
  grid-area: l;
}

.grid-board {
  grid-area: c;
}

.score-board {
  grid-area: r;
}
